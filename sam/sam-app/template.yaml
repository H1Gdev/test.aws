# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification.html

# [AWS CloudFormation Template]
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-guide.html
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-reference.html
AWSTemplateFormatVersion: '2010-09-09'

# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform: AWS::Serverless-2016-10-31

# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-description-structure.html
Description: >
  sam-app

  Sample SAM Template for sam-app

# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html
Parameters:
  StageName:
    Description: API Gateway StageName
    Type: String
    Default: Prod
  AllowOrigin:
    Description: API Gateway CorsConfiguration AllowOrigin
    Type: String
    Default: "*"

# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/conditions-section-structure.html
Conditions:
  AlwaysFalse:
    !Equals [true, false]

# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/mappings-section-structure.html
Mappings:
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-findinmap.html
  # MapName
  StageMap:
    # TopLevelKey
    Prod:
      # SecondLevelKey
      Timeout: 3
      Tracing: Active
    Dev:
      Timeout: 10
      Tracing: Disabled

# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy-globals.html
Globals:
  Function:
    Timeout: !FindInMap [ StageMap, !Ref StageName, Timeout ]
    Tracing: !FindInMap [ StageMap, !Ref StageName, Tracing ]

# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-resources-and-properties.html
  EventFunction:
    # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: event/
      Handler: src/index.handler
      Layers:
        # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-ref.html
        - !Ref LodashLayer
        # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-sub.html
        - !Sub arn:aws:lambda:${AWS::Region}:094274105915:layer:AWSLambdaPowertoolsTypeScriptV2:8
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: my/parameter
      # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy-globals.html#sam-specification-template-anatomy-globals-implicit-apis
      Events:
        # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-eventsource.html
        GetEvent:
          # lambda:InvokeFunction permission is implicitly granted.
          # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html
          Type: Api
          Properties:
            Path: /lambda
            Method: post
            RestApiId: !Ref OpenApi
  LodashLayer:
    # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-layerversion.html
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: lodash
      ContentUri: lodash/
      CompatibleRuntimes:
        - nodejs18.x
      CompatibleArchitectures:
        - x86_64
    # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/building-layers.html
    Metadata:
      BuildMethod: nodejs18.x
      BuildArchitecture: x86_64

  EventJavaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: event.java/
      Handler: event.LambdaHandler::handleRequest
      Layers:
        # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-ref.html
        - !Ref JavaLayer
      Runtime: java21
      Architectures:
        - x86_64
      Timeout: 30
      MemorySize: 512
      # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html
      SnapStart:
        ApplyOn: PublishedVersions
      AutoPublishAlias: live
      # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: my/parameter
      # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy-globals.html#sam-specification-template-anatomy-globals-implicit-apis
      Events:
        # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-eventsource.html
        GetEvent:
          # lambda:InvokeFunction permission is implicitly granted.
          # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html
          Type: Api
          Properties:
            Path: /lambda
            Method: get
            RestApiId: !Ref OpenApi
    # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/building-custom-runtimes.html
    Metadata:
      BuildMethod: makefile
  JavaLayer:
    # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-layerversion.html
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: java
      ContentUri: layer.java/
      CompatibleRuntimes:
        - java21
      CompatibleArchitectures:
        - x86_64
    # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/building-layers.html
    Metadata:
      BuildMethod: java21
      BuildArchitecture: x86_64

  EventPythonFunction:
    Type: AWS::Serverless::Function
    Properties:
      # Python cannot set ignore files.
      CodeUri: event.python/src/
      Handler: lambda_function.lambda_handler
      Layers:
        # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-sub.html
        - !Sub arn:aws:lambda:${AWS::Region}:017000801446:layer:AWSLambdaPowertoolsPythonV2:32
      Runtime: python3.10
      Architectures:
        - x86_64
      # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: my/parameter
      # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy-globals.html#sam-specification-template-anatomy-globals-implicit-apis
      Events:
        # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-eventsource.html
        GetEvent:
          # lambda:InvokeFunction permission is implicitly granted.
          # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html
          Type: Api
          Properties:
            Path: /lambda
            Method: put
            RestApiId: !Ref OpenApi

  EventDotNetFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: event.net/Event/src/Event/
      Handler: Event::Event.LambdaHandler::HandleRequest
      Runtime: dotnet6
      Architectures:
        - x86_64
      # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: my/parameter

  # REST API
  EventRestApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: event.restapi/src/
      Handler: rest_lambda_function.lambda_handler
      Layers:
        - !Sub arn:aws:lambda:${AWS::Region}:017000801446:layer:AWSLambdaPowertoolsPythonV2:32
      Runtime: python3.10
      Architectures:
        - x86_64
      Environment:
        Variables:
          ALLOW_ORIGIN: !Ref AllowOrigin
      Events:
        GetUsersEvent:
          Type: Api
          Properties:
            Path: /users
            Method: get
            RestApiId: !Ref OpenApi
        PostUserEvent:
          Type: Api
          Properties:
            Path: /users
            Method: post
            RestApiId: !Ref OpenApi
        GetUserEvent:
          Type: Api
          Properties:
            Path: /users/{userId}
            Method: get
            RestApiId: !Ref OpenApi
        PutUserEvent:
          Type: Api
          Properties:
            Path: /users/{userId}
            Method: put
            RestApiId: !Ref OpenApi

  OpenApi:
    # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-api.html
    Type: AWS::Serverless::Api
    Properties:
      # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-api-endpointconfiguration.html
      EndpointConfiguration: REGIONAL
      StageName: !Ref StageName
      OpenApiVersion: 3.0.3
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./api/openapi.yaml
      # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-api-corsconfiguration.html
      # Enable CORS: OPTIONS method(Mock) is added.
      Cors:
        # Headers required by Powertools for AWS Lambda (Python).
        AllowHeaders: "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
        AllowMethods: "'GET,PATCH,POST,PUT,DELETE'"
        AllowOrigin: !Sub "'${AllowOrigin}'"
      GatewayResponses:
        DEFAULT_4XX:
          ResponseParameters:
            Headers:
              Access-Control-Allow-Headers: "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
              Access-Control-Allow-Methods: "'GET,PATCH,POST,PUT,DELETE'"
              Access-Control-Allow-Origin: !Sub "'${AllowOrigin}'"
        DEFAULT_5XX:
          ResponseParameters:
            Headers:
              Access-Control-Allow-Headers: "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
              Access-Control-Allow-Methods: "'GET,PATCH,POST,PUT,DELETE'"
              Access-Control-Allow-Origin: !Sub "'${AllowOrigin}'"
      TracingEnabled: true
      # Stage variables
      Variables:
        StageName: !Ref StageName

  SSMParameter:
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-parameter.html
    Type: AWS::SSM::Parameter
    Condition: AlwaysFalse
    Properties:
      Name: /my/parameter
      Type: String
      Value: Test

# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html
Outputs:
  EventApi:
    Description: "API Gateway endpoint URL for Prod stage for Event function"
    Value: !Sub "https://${OpenApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/lambda/"
  EventFunctionArn:
    Description: "Event Lambda Function ARN"
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html
    Value: !GetAtt EventFunction.Arn
  EventFunctionIamRole:
    Description: "Implicit IAM Role created for Event function"
    Value: !GetAtt EventFunctionRole.Arn

  EventJavaApi:
    Description: "API Gateway endpoint URL for Prod stage for EventJava function"
    Value: !Sub "https://${OpenApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/lambda/"
  EventJavaFunctionArn:
    Description: "EventJava Lambda Function ARN"
    Value: !GetAtt EventJavaFunction.Arn
  EventJavaFunctionIamRole:
    Description: "Implicit IAM Role created for EventJava function"
    Value: !GetAtt EventJavaFunctionRole.Arn

  EventPythonApi:
    Description: "API Gateway endpoint URL for Prod stage for EventPython function"
    Value: !Sub "https://${OpenApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/lambda/"
  EventPythonFunctionArn:
    Description: "EventPython Lambda Function ARN"
    Value: !GetAtt EventPythonFunction.Arn
  EventPythonFunctionIamRole:
    Description: "Implicit IAM Role created for EventPython function"
    Value: !GetAtt EventPythonFunctionRole.Arn

  EventDotNetFunctionArn:
    Description: "EventDotNet Lambda Function ARN"
    Value: !GetAtt EventDotNetFunction.Arn
  EventDotNetFunctionIamRole:
    Description: "Implicit IAM Role created for EventDotNet function"
    Value: !GetAtt EventDotNetFunctionRole.Arn
